{"version":3,"file":"markdown.js","mappings":"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","sources":["webpack://info_yc/./node_modules/linkify-it/index.js","webpack://info_yc/./node_modules/linkify-it/lib/re.js","webpack://info_yc/./node_modules/markdown-it/index.js","webpack://info_yc/./node_modules/markdown-it/lib/common/entities.js","webpack://info_yc/./node_modules/markdown-it/lib/common/html_blocks.js","webpack://info_yc/./node_modules/markdown-it/lib/common/html_re.js","webpack://info_yc/./node_modules/markdown-it/lib/common/utils.js","webpack://info_yc/./node_modules/markdown-it/lib/helpers/index.js","webpack://info_yc/./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack://info_yc/./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack://info_yc/./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack://info_yc/./node_modules/markdown-it/lib/index.js","webpack://info_yc/./node_modules/markdown-it/lib/parser_block.js","webpack://info_yc/./node_modules/markdown-it/lib/parser_core.js","webpack://info_yc/./node_modules/markdown-it/lib/parser_inline.js","webpack://info_yc/./node_modules/markdown-it/lib/presets/commonmark.js","webpack://info_yc/./node_modules/markdown-it/lib/presets/default.js","webpack://info_yc/./node_modules/markdown-it/lib/presets/zero.js","webpack://info_yc/./node_modules/markdown-it/lib/renderer.js","webpack://info_yc/./node_modules/markdown-it/lib/ruler.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_block/code.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_block/fence.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_block/heading.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_block/hr.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_block/html_block.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_block/lheading.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_block/list.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_block/reference.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_block/state_block.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_block/table.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_core/block.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_core/inline.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_core/linkify.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_core/normalize.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_core/replacements.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_core/state_core.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_core/text_join.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_inline/entity.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_inline/escape.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_inline/fragments_join.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_inline/image.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_inline/link.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_inline/linkify.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_inline/newline.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack://info_yc/./node_modules/markdown-it/lib/rules_inline/text.js","webpack://info_yc/./node_modules/markdown-it/lib/token.js","webpack://info_yc/./node_modules/mdurl/decode.js","webpack://info_yc/./node_modules/mdurl/encode.js","webpack://info_yc/./node_modules/mdurl/format.js","webpack://info_yc/./node_modules/mdurl/index.js","webpack://info_yc/./node_modules/mdurl/parse.js","webpack://info_yc/./node_modules/punycode/punycode.es6.js","webpack://info_yc/./node_modules/uc.micro/categories/Cc/regex.js","webpack://info_yc/./node_modules/uc.micro/categories/Cf/regex.js","webpack://info_yc/./node_modules/uc.micro/categories/P/regex.js","webpack://info_yc/./node_modules/uc.micro/categories/Z/regex.js","webpack://info_yc/./node_modules/uc.micro/index.js","webpack://info_yc/./node_modules/uc.micro/properties/Any/regex.js","webpack://info_yc/./src/components/MarkdownNow.vue","webpack://info_yc/./node_modules/markdown-it-anchor/dist/markdownItAnchor.mjs","webpack://info_yc/src/components/MarkdownNow.vue","webpack://info_yc/./src/components/MarkdownNow.vue?7986","webpack://info_yc/./src/components/MarkdownNow.vue?6755"],"sourcesContent":["'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test     = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) return null;\n\n  var m = this.re.schema_at_start.exec(text);\n  if (!m) return null;\n\n  var len = this.testSchemaAt(text, m[2], m[0].length);\n  if (!len) return null;\n\n  this.__schema__     = m[2];\n  this.__index__      = m.index + m[1].length;\n  this.__last_index__ = m.index + m[0].length + len;\n\n  return createMatch(this, 0);\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n  opts = opts || {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + '|$)|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + '|$)|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  [ 'text_join',      require('./rules_core/text_join')      ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'linkify',         require('./rules_inline/linkify') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  [ 'fragments_join',  require('./rules_inline/fragments_join') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\n\nmodule.exports = function text_join(state) {\n  var j, l, tokens, curr, max, last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr]; }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false;\n\n  if (pos + 1 >= max) return false;\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23 /* # */) {\n    match = state.src.slice(pos).match(DIGITAL_RE);\n    if (match) {\n      if (!silent) {\n        code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n\n        token         = state.push('text_special', '', 0);\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        token.markup  = match[0];\n        token.info    = 'entity';\n      }\n      state.pos += match[0].length;\n      return true;\n    }\n  } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token         = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup  = match[0];\n          token.info    = 'entity';\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch1, ch2, origStr, escapedStr, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false;\n  pos++;\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false;\n\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++;\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info   = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function fragments_join(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n\n    if (isLinkOpen(token.content))  state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process links like https://example.org/\n\n'use strict';\n\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n\n  pos = state.pos;\n  max = state.posMax;\n\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false;\n\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n\n  proto = match[1];\n\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n\n  url = link.url;\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '');\n\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n\n    token         = state.push('link_open', 'a', 1);\n    token.attrs   = [ [ 'href', fullUrl ] ];\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n\n    token         = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n\n    token         = state.push('link_close', 'a', -1);\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", {\n    staticClass: \"markdown-formatting\",\n    domProps: { innerHTML: _vm._s(_vm.htmlContent) },\n  })\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var e=!1,n={false:\"push\",true:\"unshift\",after:\"push\",before:\"unshift\"},t={isPermalinkSymbol:!0};function r(r,a,i,l){var o;if(!e){var c=\"Using deprecated markdown-it-anchor permalink option, see https://github.com/valeriangalliat/markdown-it-anchor#todo-anchor-or-file\";\"object\"==typeof process&&process&&process.emitWarning?process.emitWarning(c):console.warn(c),e=!0}var s=[Object.assign(new i.Token(\"link_open\",\"a\",1),{attrs:[].concat(a.permalinkClass?[[\"class\",a.permalinkClass]]:[],[[\"href\",a.permalinkHref(r,i)]],Object.entries(a.permalinkAttrs(r,i)))}),Object.assign(new i.Token(\"html_block\",\"\",0),{content:a.permalinkSymbol,meta:t}),new i.Token(\"link_close\",\"a\",-1)];a.permalinkSpace&&i.tokens[l+1].children[n[a.permalinkBefore]](Object.assign(new i.Token(\"text\",\"\",0),{content:\" \"})),(o=i.tokens[l+1].children)[n[a.permalinkBefore]].apply(o,s)}function a(e){return\"#\"+e}function i(e){return{}}var l={class:\"header-anchor\",symbol:\"#\",renderHref:a,renderAttrs:i};function o(e){function n(t){return t=Object.assign({},n.defaults,t),function(n,r,a,i){return e(n,t,r,a,i)}}return n.defaults=Object.assign({},l),n.renderPermalinkImpl=e,n}var c=o(function(e,r,a,i,l){var o,c=[Object.assign(new i.Token(\"link_open\",\"a\",1),{attrs:[].concat(r.class?[[\"class\",r.class]]:[],[[\"href\",r.renderHref(e,i)]],r.ariaHidden?[[\"aria-hidden\",\"true\"]]:[],Object.entries(r.renderAttrs(e,i)))}),Object.assign(new i.Token(\"html_inline\",\"\",0),{content:r.symbol,meta:t}),new i.Token(\"link_close\",\"a\",-1)];if(r.space){var s=\"string\"==typeof r.space?r.space:\" \";i.tokens[l+1].children[n[r.placement]](Object.assign(new i.Token(\"string\"==typeof r.space?\"html_inline\":\"text\",\"\",0),{content:s}))}(o=i.tokens[l+1].children)[n[r.placement]].apply(o,c)});Object.assign(c.defaults,{space:!0,placement:\"after\",ariaHidden:!1});var s=o(c.renderPermalinkImpl);s.defaults=Object.assign({},c.defaults,{ariaHidden:!0});var u=o(function(e,n,t,r,a){var i=[Object.assign(new r.Token(\"link_open\",\"a\",1),{attrs:[].concat(n.class?[[\"class\",n.class]]:[],[[\"href\",n.renderHref(e,r)]],Object.entries(n.renderAttrs(e,r)))})].concat(n.safariReaderFix?[new r.Token(\"span_open\",\"span\",1)]:[],r.tokens[a+1].children,n.safariReaderFix?[new r.Token(\"span_close\",\"span\",-1)]:[],[new r.Token(\"link_close\",\"a\",-1)]);r.tokens[a+1]=Object.assign(new r.Token(\"inline\",\"\",0),{children:i})});Object.assign(u.defaults,{safariReaderFix:!1});var d=o(function(e,r,a,i,l){var o;if(![\"visually-hidden\",\"aria-label\",\"aria-describedby\",\"aria-labelledby\"].includes(r.style))throw new Error(\"`permalink.linkAfterHeader` called with unknown style option `\"+r.style+\"`\");if(![\"aria-describedby\",\"aria-labelledby\"].includes(r.style)&&!r.assistiveText)throw new Error(\"`permalink.linkAfterHeader` called without the `assistiveText` option in `\"+r.style+\"` style\");if(\"visually-hidden\"===r.style&&!r.visuallyHiddenClass)throw new Error(\"`permalink.linkAfterHeader` called without the `visuallyHiddenClass` option in `visually-hidden` style\");var c=i.tokens[l+1].children.filter(function(e){return\"text\"===e.type||\"code_inline\"===e.type}).reduce(function(e,n){return e+n.content},\"\"),s=[],u=[];if(r.class&&u.push([\"class\",r.class]),u.push([\"href\",r.renderHref(e,i)]),u.push.apply(u,Object.entries(r.renderAttrs(e,i))),\"visually-hidden\"===r.style){if(s.push(Object.assign(new i.Token(\"span_open\",\"span\",1),{attrs:[[\"class\",r.visuallyHiddenClass]]}),Object.assign(new i.Token(\"text\",\"\",0),{content:r.assistiveText(c)}),new i.Token(\"span_close\",\"span\",-1)),r.space){var d=\"string\"==typeof r.space?r.space:\" \";s[n[r.placement]](Object.assign(new i.Token(\"string\"==typeof r.space?\"html_inline\":\"text\",\"\",0),{content:d}))}s[n[r.placement]](Object.assign(new i.Token(\"span_open\",\"span\",1),{attrs:[[\"aria-hidden\",\"true\"]]}),Object.assign(new i.Token(\"html_inline\",\"\",0),{content:r.symbol,meta:t}),new i.Token(\"span_close\",\"span\",-1))}else s.push(Object.assign(new i.Token(\"html_inline\",\"\",0),{content:r.symbol,meta:t}));\"aria-label\"===r.style?u.push([\"aria-label\",r.assistiveText(c)]):[\"aria-describedby\",\"aria-labelledby\"].includes(r.style)&&u.push([r.style,e]);var f=[Object.assign(new i.Token(\"link_open\",\"a\",1),{attrs:u})].concat(s,[new i.Token(\"link_close\",\"a\",-1)]);(o=i.tokens).splice.apply(o,[l+3,0].concat(f)),r.wrapper&&(i.tokens.splice(l,0,Object.assign(new i.Token(\"html_block\",\"\",0),{content:r.wrapper[0]+\"\\n\"})),i.tokens.splice(l+3+f.length+1,0,Object.assign(new i.Token(\"html_block\",\"\",0),{content:r.wrapper[1]+\"\\n\"})))});function f(e,n,t,r){var a=e,i=r;if(t&&Object.prototype.hasOwnProperty.call(n,a))throw new Error(\"User defined `id` attribute `\"+e+\"` is not unique. Please fix it in your Markdown to continue.\");for(;Object.prototype.hasOwnProperty.call(n,a);)a=e+\"-\"+i,i+=1;return n[a]=!0,a}function b(e,n){n=Object.assign({},b.defaults,n),e.core.ruler.push(\"anchor\",function(e){for(var t,a={},i=e.tokens,l=Array.isArray(n.level)?(t=n.level,function(e){return t.includes(e)}):function(e){return function(n){return n>=e}}(n.level),o=0;o<i.length;o++){var c=i[o];if(\"heading_open\"===c.type&&l(Number(c.tag.substr(1)))){var s=n.getTokensText(i[o+1].children),u=c.attrGet(\"id\");u=null==u?f(n.slugify(s),a,!1,n.uniqueSlugStartIndex):f(u,a,!0,n.uniqueSlugStartIndex),c.attrSet(\"id\",u),!1!==n.tabIndex&&c.attrSet(\"tabindex\",\"\"+n.tabIndex),\"function\"==typeof n.permalink?n.permalink(u,n,e,o):(n.permalink||n.renderPermalink&&n.renderPermalink!==r)&&n.renderPermalink(u,n,e,o),o=i.indexOf(c),n.callback&&n.callback(c,{slug:u,title:s})}}})}Object.assign(d.defaults,{style:\"visually-hidden\",space:!0,placement:\"after\",wrapper:null}),b.permalink={__proto__:null,legacy:r,renderHref:a,renderAttrs:i,makePermalink:o,linkInsideHeader:c,ariaHidden:s,headerLink:u,linkAfterHeader:d},b.defaults={level:1,slugify:function(e){return encodeURIComponent(String(e).trim().toLowerCase().replace(/\\s+/g,\"-\"))},uniqueSlugStartIndex:1,tabIndex:\"-1\",getTokensText:function(e){return e.filter(function(e){return[\"text\",\"code_inline\"].includes(e.type)}).map(function(e){return e.content}).join(\"\")},permalink:!1,renderPermalink:r,permalinkClass:s.defaults.class,permalinkSpace:s.defaults.space,permalinkSymbol:\"¶\",permalinkBefore:\"before\"===s.defaults.placement,permalinkHref:s.defaults.renderHref,permalinkAttrs:s.defaults.renderAttrs},b.default=b;export default b;\n//# sourceMappingURL=markdownItAnchor.mjs.map\n","<template>\n  <!-- eslint-disable-next-line vue/no-v-html -->\n  <div class=\"markdown-formatting\" v-html=\"htmlContent\"></div>\n</template>\n\n<script>\nimport markdownIt from 'markdown-it'\nimport markdownItAnchor from 'markdown-it-anchor'\n\nconst md = markdownIt({ linkify: true, typographer: true }).use(markdownItAnchor, {\n  slugify(s) {\n    return String(s).trim().toLowerCase().replace(/\\s+/g, '-')\n  },\n  permalink: markdownItAnchor.permalink.ariaHidden({\n    placement: 'before',\n    symbol: '<i class=\"fas fa-link\" style=\"font-size: 0.5em\"></i>',\n  }),\n})\n\nexport default {\n  props: {\n    content: {\n      type: String,\n      required: true,\n    },\n    noParagraph: Boolean,\n  },\n  computed: {\n    htmlContent() {\n      const rendered = md.render(this.content)\n      return this.noParagraph ? this.extractParagraph(rendered) : rendered\n    },\n  },\n  methods: {\n    extractParagraph(rendered) {\n      const parser = new DOMParser()\n      const doc = parser.parseFromString(rendered, 'text/html')\n      if (doc.body.children.length === 1) {\n        return doc.body.children[0].innerHTML\n      } else {\n        return rendered\n      }\n    },\n  },\n}\n</script>\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MarkdownNow.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MarkdownNow.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MarkdownNow.vue?vue&type=template&id=77592745&\"\nimport script from \"./MarkdownNow.vue?vue&type=script&lang=js&\"\nexport * from \"./MarkdownNow.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["assign","obj","sources","Array","prototype","slice","call","arguments","forEach","source","Object","keys","key","_class","toString","isFunction","escapeRE","str","replace","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","text","pos","self","tail","re","http","RegExp","src_auth","src_host_port_strict","src_path","test","match","length","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","split","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","push","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","name","val","Error","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","isString","alias","slist","filter","map","schema_test","src_ZPCc","schema_search","schema_at_start","pretest","__index__","__text_cache__","resetScanCache","Match","shift","start","end","__last_index__","this","schema","__schema__","toLowerCase","index","lastIndex","raw","url","createMatch","LinkifyIt","schemas","options","reduce","acc","k","hasOwnProperty","add","definition","set","m","ml","me","len","next","tld_pos","exec","testSchemaAt","search","indexOf","result","matchAtStart","list","keepOld","isArray","concat","sort","el","idx","arr","reverse","module","exports","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","_hasOwnProperty","has","object","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","mdurl","ucmicro","TypeError","unescapeMd","unescapeAll","escaped","entity","code","charCodeAt","parseInt","replaceEntityPattern","escapeHtml","arrayReplaceAt","src","newElements","isSpace","isWhiteSpace","isMdAsciiPunct","isPunctChar","normalizeReference","trim","toUpperCase","parseLinkLabel","parseLinkDestination","parseLinkTitle","max","level","ok","lines","state","disableNested","found","marker","prevPos","labelEnd","posMax","oldPos","md","inline","skipToken","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","RECODE_HOSTNAME_FOR","normalizeLink","parsed","parse","hostname","protocol","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","defaultChars","MarkdownIt","presetName","block","core","renderer","linkify","configure","presets","components","rules","ruler","enableOnly","rules2","ruler2","enable","ignoreInvalid","chain","missed","disable","use","plugin","args","apply","env","State","process","tokens","render","parseInline","inlineMode","renderInline","Ruler","_rules","i","alt","tokenize","startLine","endLine","getRules","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","Core","l","_rules2","cache","pending","pushPending","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","default_rules","code_inline","slf","token","renderAttrs","content","code_block","fence","highlighted","tmpAttrs","tmpToken","info","langName","langAttrs","attrIndex","attrs","image","renderInlineAsText","children","renderToken","hardbreak","softbreak","html_block","html_inline","nextToken","needLf","hidden","nesting","tag","type","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","altName","fn","at","opt","before","beforeName","ruleName","splice","after","afterName","chainName","silent","adjustTab","initial","lastLineEmpty","nextLine","offset","oldBMarks","oldBSCount","oldIndent","oldParentType","oldSCount","oldTShift","spaceAfterMarker","terminate","terminatorRules","isOutdented","oldLineMax","bMarks","tShift","eMarks","bsCount","parentType","markup","last","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","tmp","skipSpacesBack","skipCharsBack","cnt","block_names","HTML_SEQUENCES","lineText","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","Math","min","markTightParagraphs","_endLine","destEndPos","destEndLineNo","href","label","res","title","references","Token","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","getLine","escapedSplit","isEscaped","lastPos","current","substring","columns","columnCount","aligns","t","tableLines","tbodyLines","firstCh","secondCh","pop","tok","isLinkClose","j","currentToken","nodes","ln","htmlLinkLevel","fullUrl","urlText","links","blockTokens","NEWLINES_RE","NULL_RE","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","StateCore","curr","EMAIL_RE","AUTOLINK_RE","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","processDelimiters","delimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","close","open","tokens_meta","postProcess","startDelim","endDelim","isStrong","scanned","scanDelims","can_open","can_close","DIGITAL_RE","NAMED_RE","ESCAPED","ch1","ch2","origStr","escapedStr","lc","isLetter","linkLevel","labelStart","ref","parseReference","SCHEME_RE","proto","pmax","ws","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","loneMarkers","isTerminatorChar","meta","attrPush","attrData","attrSet","value","attrGet","attrJoin","decodeCache","string","exclude","getDecodeCache","seq","b1","b2","b3","b4","chr","componentChars","encodeCache","keepEscaped","nextCode","getEncodeCache","encodeURIComponent","slashes","auth","port","pathname","hash","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","rest","simplePath","substr","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm","u","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","floor","stringFromCharCode","error","RangeError","mapDomain","parts","encoded","array","ucs2decode","output","counter","extra","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","input","inputLength","n","bias","basic","oldi","w","codePoint","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","Any","Cc","Cf","P","Z","_vm","_c","_self","staticClass","domProps","innerHTML","_s","htmlContent","_withStripped","e","false","true","isPermalinkSymbol","a","o","emitWarning","console","warn","permalinkClass","permalinkHref","entries","permalinkAttrs","permalinkSymbol","permalinkSpace","permalinkBefore","class","symbol","renderHref","defaults","renderPermalinkImpl","ariaHidden","space","placement","safariReaderFix","d","includes","style","assistiveText","visuallyHiddenClass","f","wrapper","b","getTokensText","slugify","uniqueSlugStartIndex","tabIndex","permalink","renderPermalink","callback","slug","__proto__","legacy","makePermalink","linkInsideHeader","headerLink","linkAfterHeader","props","required","noParagraph","computed","methods","extractParagraph","rendered"],"sourceRoot":""}